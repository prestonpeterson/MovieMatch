// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: movie_opinion.proto

#ifndef PROTOBUF_INCLUDED_movie_5fopinion_2eproto
#define PROTOBUF_INCLUDED_movie_5fopinion_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_movie_5fopinion_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_movie_5fopinion_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_movie_5fopinion_2eproto();
class MovieOpinion;
class MovieOpinionDefaultTypeInternal;
extern MovieOpinionDefaultTypeInternal _MovieOpinion_default_instance_;
namespace google {
namespace protobuf {
template<> ::MovieOpinion* Arena::CreateMaybeMessage<::MovieOpinion>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class MovieOpinion :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MovieOpinion) */ {
 public:
  MovieOpinion();
  virtual ~MovieOpinion();

  MovieOpinion(const MovieOpinion& from);

  inline MovieOpinion& operator=(const MovieOpinion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MovieOpinion(MovieOpinion&& from) noexcept
    : MovieOpinion() {
    *this = ::std::move(from);
  }

  inline MovieOpinion& operator=(MovieOpinion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const MovieOpinion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MovieOpinion* internal_default_instance() {
    return reinterpret_cast<const MovieOpinion*>(
               &_MovieOpinion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MovieOpinion* other);
  friend void swap(MovieOpinion& a, MovieOpinion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MovieOpinion* New() const final {
    return CreateMaybeMessage<MovieOpinion>(nullptr);
  }

  MovieOpinion* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MovieOpinion>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MovieOpinion& from);
  void MergeFrom(const MovieOpinion& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MovieOpinion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string movie_name = 2;
  void clear_movie_name();
  static const int kMovieNameFieldNumber = 2;
  const ::std::string& movie_name() const;
  void set_movie_name(const ::std::string& value);
  #if LANG_CXX11
  void set_movie_name(::std::string&& value);
  #endif
  void set_movie_name(const char* value);
  void set_movie_name(const char* value, size_t size);
  ::std::string* mutable_movie_name();
  ::std::string* release_movie_name();
  void set_allocated_movie_name(::std::string* movie_name);

  // uint64 user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // bool thumbs_up = 3;
  void clear_thumbs_up();
  static const int kThumbsUpFieldNumber = 3;
  bool thumbs_up() const;
  void set_thumbs_up(bool value);

  // @@protoc_insertion_point(class_scope:MovieOpinion)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr movie_name_;
  ::google::protobuf::uint64 user_id_;
  bool thumbs_up_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_movie_5fopinion_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MovieOpinion

// uint64 user_id = 1;
inline void MovieOpinion::clear_user_id() {
  user_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MovieOpinion::user_id() const {
  // @@protoc_insertion_point(field_get:MovieOpinion.user_id)
  return user_id_;
}
inline void MovieOpinion::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:MovieOpinion.user_id)
}

// string movie_name = 2;
inline void MovieOpinion::clear_movie_name() {
  movie_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MovieOpinion::movie_name() const {
  // @@protoc_insertion_point(field_get:MovieOpinion.movie_name)
  return movie_name_.GetNoArena();
}
inline void MovieOpinion::set_movie_name(const ::std::string& value) {
  
  movie_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MovieOpinion.movie_name)
}
#if LANG_CXX11
inline void MovieOpinion::set_movie_name(::std::string&& value) {
  
  movie_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MovieOpinion.movie_name)
}
#endif
inline void MovieOpinion::set_movie_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  movie_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MovieOpinion.movie_name)
}
inline void MovieOpinion::set_movie_name(const char* value, size_t size) {
  
  movie_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MovieOpinion.movie_name)
}
inline ::std::string* MovieOpinion::mutable_movie_name() {
  
  // @@protoc_insertion_point(field_mutable:MovieOpinion.movie_name)
  return movie_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MovieOpinion::release_movie_name() {
  // @@protoc_insertion_point(field_release:MovieOpinion.movie_name)
  
  return movie_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MovieOpinion::set_allocated_movie_name(::std::string* movie_name) {
  if (movie_name != nullptr) {
    
  } else {
    
  }
  movie_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), movie_name);
  // @@protoc_insertion_point(field_set_allocated:MovieOpinion.movie_name)
}

// bool thumbs_up = 3;
inline void MovieOpinion::clear_thumbs_up() {
  thumbs_up_ = false;
}
inline bool MovieOpinion::thumbs_up() const {
  // @@protoc_insertion_point(field_get:MovieOpinion.thumbs_up)
  return thumbs_up_;
}
inline void MovieOpinion::set_thumbs_up(bool value) {
  
  thumbs_up_ = value;
  // @@protoc_insertion_point(field_set:MovieOpinion.thumbs_up)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_movie_5fopinion_2eproto
